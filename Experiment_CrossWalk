{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8820615,"sourceType":"datasetVersion","datasetId":5306477},{"sourceId":8820716,"sourceType":"datasetVersion","datasetId":5306543},{"sourceId":8820948,"sourceType":"datasetVersion","datasetId":5306628}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install ultralytics","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-30T03:51:19.971005Z","iopub.execute_input":"2024-06-30T03:51:19.971396Z","iopub.status.idle":"2024-06-30T03:51:34.735172Z","shell.execute_reply.started":"2024-06-30T03:51:19.971366Z","shell.execute_reply":"2024-06-30T03:51:34.734056Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Collecting ultralytics\n  Downloading ultralytics-8.2.48-py3-none-any.whl.metadata (41 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.2/41.2 kB\u001b[0m \u001b[31m666.0 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m \u001b[36m0:00:01\u001b[0m\n\u001b[?25hRequirement already satisfied: numpy<2.0.0,>=1.23.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (1.26.4)\nRequirement already satisfied: matplotlib>=3.3.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (3.7.5)\nRequirement already satisfied: opencv-python>=4.6.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (4.10.0.82)\nRequirement already satisfied: pillow>=7.1.2 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (9.5.0)\nRequirement already satisfied: pyyaml>=5.3.1 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (6.0.1)\nRequirement already satisfied: requests>=2.23.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.32.3)\nRequirement already satisfied: scipy>=1.4.1 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (1.11.4)\nRequirement already satisfied: torch>=1.8.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.1.2)\nRequirement already satisfied: torchvision>=0.9.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (0.16.2)\nRequirement already satisfied: tqdm>=4.64.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (4.66.4)\nRequirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from ultralytics) (5.9.3)\nRequirement already satisfied: py-cpuinfo in /opt/conda/lib/python3.10/site-packages (from ultralytics) (9.0.0)\nRequirement already satisfied: pandas>=1.1.4 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.2.1)\nRequirement already satisfied: seaborn>=0.11.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (0.12.2)\nCollecting ultralytics-thop>=2.0.0 (from ultralytics)\n  Downloading ultralytics_thop-2.0.0-py3-none-any.whl.metadata (8.5 kB)\nRequirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (1.2.0)\nRequirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (4.47.0)\nRequirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (1.4.5)\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (21.3)\nRequirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (3.1.1)\nRequirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->ultralytics) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->ultralytics) (2023.4)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (2024.2.2)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.13.1)\nRequirement already satisfied: typing-extensions in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (4.9.0)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (1.12.1)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.2.1)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.1.2)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (2024.3.1)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.16.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.8.0->ultralytics) (2.1.3)\nRequirement already satisfied: mpmath<1.4.0,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.8.0->ultralytics) (1.3.0)\nDownloading ultralytics-8.2.48-py3-none-any.whl (793 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m793.7/793.7 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading ultralytics_thop-2.0.0-py3-none-any.whl (25 kB)\nInstalling collected packages: ultralytics-thop, ultralytics\nSuccessfully installed ultralytics-8.2.48 ultralytics-thop-2.0.0\n","output_type":"stream"}]},{"cell_type":"code","source":"!pip install wandb","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:51:34.737526Z","iopub.execute_input":"2024-06-30T03:51:34.737900Z","iopub.status.idle":"2024-06-30T03:51:47.000104Z","shell.execute_reply.started":"2024-06-30T03:51:34.737868Z","shell.execute_reply":"2024-06-30T03:51:46.998846Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Requirement already satisfied: wandb in /opt/conda/lib/python3.10/site-packages (0.17.0)\nRequirement already satisfied: click!=8.0.0,>=7.1 in /opt/conda/lib/python3.10/site-packages (from wandb) (8.1.7)\nRequirement already satisfied: docker-pycreds>=0.4.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (0.4.0)\nRequirement already satisfied: gitpython!=3.1.29,>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (3.1.41)\nRequirement already satisfied: platformdirs in /opt/conda/lib/python3.10/site-packages (from wandb) (3.11.0)\nRequirement already satisfied: protobuf!=4.21.0,<5,>=3.19.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (3.20.3)\nRequirement already satisfied: psutil>=5.0.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (5.9.3)\nRequirement already satisfied: pyyaml in /opt/conda/lib/python3.10/site-packages (from wandb) (6.0.1)\nRequirement already satisfied: requests<3,>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (2.32.3)\nRequirement already satisfied: sentry-sdk>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from wandb) (2.3.1)\nRequirement already satisfied: setproctitle in /opt/conda/lib/python3.10/site-packages (from wandb) (1.3.3)\nRequirement already satisfied: setuptools in /opt/conda/lib/python3.10/site-packages (from wandb) (69.0.3)\nRequirement already satisfied: six>=1.4.0 in /opt/conda/lib/python3.10/site-packages (from docker-pycreds>=0.4.0->wandb) (1.16.0)\nRequirement already satisfied: gitdb<5,>=4.0.1 in /opt/conda/lib/python3.10/site-packages (from gitpython!=3.1.29,>=1.0.0->wandb) (4.0.11)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.0.0->wandb) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.0.0->wandb) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.0.0->wandb) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.0.0->wandb) (2024.2.2)\nRequirement already satisfied: smmap<6,>=3.0.1 in /opt/conda/lib/python3.10/site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.29,>=1.0.0->wandb) (5.0.1)\n","output_type":"stream"}]},{"cell_type":"code","source":"!wandb login ","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:51:47.001797Z","iopub.execute_input":"2024-06-30T03:51:47.002155Z","iopub.status.idle":"2024-06-30T03:53:51.469132Z","shell.execute_reply.started":"2024-06-30T03:51:47.002107Z","shell.execute_reply":"2024-06-30T03:53:51.468009Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit: \nAborted!\n","output_type":"stream"}]},{"cell_type":"code","source":"import os\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import StratifiedKFold\nfrom ultralytics import YOLO\nfrom ultralytics.utils import metrics","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:53:51.472468Z","iopub.execute_input":"2024-06-30T03:53:51.472875Z","iopub.status.idle":"2024-06-30T03:53:55.906022Z","shell.execute_reply.started":"2024-06-30T03:53:51.472823Z","shell.execute_reply":"2024-06-30T03:53:55.905063Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"## Configuración de la ruta de los datos","metadata":{"execution":{"iopub.status.busy":"2024-06-29T23:27:07.219068Z","iopub.execute_input":"2024-06-29T23:27:07.219497Z","iopub.status.idle":"2024-06-29T23:27:07.223985Z","shell.execute_reply.started":"2024-06-29T23:27:07.219465Z","shell.execute_reply":"2024-06-29T23:27:07.222988Z"}}},{"cell_type":"code","source":"\npath_images = '/kaggle/input/to-train-crosswalks/to_train/images'\npath_labels = '/kaggle/input/to-train-crosswalks/to_train/labels'\npath_test_images = '/kaggle/input/test-crosswalk/test/images'\npath_test_labels = '/kaggle/input/test-crosswalk/test/labels'","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:53:55.907267Z","iopub.execute_input":"2024-06-30T03:53:55.907704Z","iopub.status.idle":"2024-06-30T03:53:55.912237Z","shell.execute_reply.started":"2024-06-30T03:53:55.907679Z","shell.execute_reply":"2024-06-30T03:53:55.911222Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"import os\nimport shutil\nimport pandas as pd\n\npath_working_test='/kaggle/working/test_folder'\n\npath_working_test_images = f'{path_working_test}/test_images'\npath_working_test_labels = f'{path_working_test}/test_labels'\n\n# Crear directorios de trabajo para las imágenes y etiquetas de prueba\nos.makedirs(path_working_test_images, exist_ok=True)\nos.makedirs(path_working_test_labels, exist_ok=True)\n\n# Copiar las imágenes de prueba al directorio de trabajo\nfor image_name in os.listdir(path_test_images):\n    shutil.copy(os.path.join(path_test_images, image_name), os.path.join(path_working_test_images, image_name))\n\n# Copiar las etiquetas de prueba al directorio de trabajo\nfor label_name in os.listdir(path_test_labels):\n    shutil.copy(os.path.join(path_test_labels, label_name), os.path.join(path_working_test_labels, label_name))\n\n# Verificar y completar etiquetas de prueba\ntest_images = os.listdir(path_working_test_images)\n\nfor image_name in test_images:\n    base_name = image_name[:-4]\n    label_name = base_name + '.txt'\n    label_path = os.path.join(path_working_test_labels, label_name)\n\n    if not os.path.exists(label_path):\n        with open(label_path, 'w') as f:\n            pass\n        print(f\"Se ha creado un archivo de etiqueta vacío para {image_name}\")\n\n# Crear DataFrames para los datos de entrenamiento y prueba\ndata = pd.DataFrame({'image': os.listdir(path_images), 'label': os.listdir(path_labels)})\ntest_data = pd.DataFrame({'image': os.listdir(path_working_test_images), 'label': os.listdir(path_working_test_labels)})\n\n# Imprimir DataFrames para verificar\nprint(\"Datos de entrenamiento:\")\nprint(data)\nprint(\"\\nDatos de prueba:\")\nprint(test_data)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:53:55.913385Z","iopub.execute_input":"2024-06-30T03:53:55.913655Z","iopub.status.idle":"2024-06-30T03:54:02.763622Z","shell.execute_reply.started":"2024-06-30T03:53:55.913633Z","shell.execute_reply":"2024-06-30T03:54:02.762679Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Se ha creado un archivo de etiqueta vacío para Strisce--118-_jpg.rf.54995eb9bae14606e4cddbc834e8ce37(1).jpg\nSe ha creado un archivo de etiqueta vacío para Strisce--105-_jpg.rf.e2fce3b37caa1e8452748ffbadde64df(1).jpg\nSe ha creado un archivo de etiqueta vacío para Strisce--113-_jpg.rf.1fcdddf1cf3d22ab22bf5b31bdd62a1e(1).jpg\nSe ha creado un archivo de etiqueta vacío para Strisce--105-_jpg.rf.16ab0e51e3a52d6520b0c449d2a8b56b(1).jpg\nSe ha creado un archivo de etiqueta vacío para Strisce--107-_jpg.rf.17c8ef02eb84b49a728055218dceaa40(1).jpg\nDatos de entrenamiento:\n                                                  image  \\\n0     Strisce--140-_jpg.rf.86b57352fd2545f88a9c7d0df...   \n1     Strisce--129-_jpg.rf.f1e7a3e79bcee39763e9c18a8...   \n2     Strisce--109-_jpg.rf.35da873c2eeb6715c4d385cde...   \n3     Strisce--345-_jpg.rf.328518dd4dd55a900d1dac183...   \n4     Strisce--1-_jpg.rf.b3959ddb964e8243a89487bddc7...   \n...                                                 ...   \n1289  Strisce--486-_jpg.rf.bd3e3f782f6913de766d60710...   \n1290  Strisce--322-_jpg.rf.3e17720ebb71b10c9460bb6f8...   \n1291  Strisce--355-_jpg.rf.459dc27a619f49e7f0f0ae8e6...   \n1292  Strisce--308-_jpg.rf.a3e7da8bac8305edb9976d533...   \n1293  Strisce--135-_jpg.rf.40613cbe563fd8608210b851d...   \n\n                                                  label  \n0     Strisce--148-_jpg.rf.9df8e6c53b9ce5489e715e08c...  \n1     Strisce--240-_jpg.rf.7fe7de74e9433bf260f4d8885...  \n2     Strisce--388-_jpg.rf.a8a6cd9c8375b77794b45ed7a...  \n3     Strisce--93-_jpg.rf.c0f23f6044ad5d19e34fc2edac...  \n4     Strisce--82-_jpg.rf.396f42e56c81ec9c0cdc0523ac...  \n...                                                 ...  \n1289  Strisce--199-_jpg.rf.6264ff9f2c73b58c6dfb8fb02...  \n1290  Strisce--43-_jpg.rf.a814ae4c8fc012230a1ab73343...  \n1291  Strisce--323-_jpg.rf.de4baf0340177b70fd57157bc...  \n1292  Strisce--98-_jpg.rf.c8db82d211e0c31eb1c9b5c0fb...  \n1293  Strisce--184-_jpg.rf.367282a9d12afc5836786c907...  \n\n[1294 rows x 2 columns]\n\nDatos de prueba:\n                                                 image  \\\n0    Strisce--121-_jpg.rf.eca474bcc68c9cb7db77a031b...   \n1    Strisce--318-_jpg.rf.37b12eff3bea98e0b8c9a2014...   \n2    Strisce--289-_jpg.rf.d311d5ca83ebf3c192e377a9d...   \n3    Strisce--134-_jpg.rf.f7e5ca2d888f5e796028cf5a0...   \n4    Strisce--341-_jpg.rf.ad468ba84bd89f1206a0e92ef...   \n..                                                 ...   \n224  Strisce--136-_jpg.rf.d23034bf7ede0aa14784a8a01...   \n225  Strisce--248-_jpg.rf.0f7d2b8a6d610f9224d9d5f9e...   \n226  Strisce--262-_jpg.rf.9632221c9cc6b7a5aac9c1765...   \n227  Strisce--492-_jpg.rf.0932a58361aff023845f8aee6...   \n228  Strisce--107-_jpg.rf.17c8ef02eb84b49a728055218...   \n\n                                                 label  \n0    Strisce--260-_jpg.rf.1a98ab7cef45231f4c20a7731...  \n1    Strisce--193-_jpg.rf.bb1f9ed0c14ad076f701a3de1...  \n2    Strisce--202-_jpg.rf.6cc6331056cbe9ca2ce0a85aa...  \n3    Strisce--40-_jpg.rf.63d615c41cc990ffede23695d9...  \n4    Strisce--294-_jpg.rf.2f28d317ee2e1030d5e36ac3c...  \n..                                                 ...  \n224  Strisce--85-_jpg.rf.0248812987d69020ed25e49be0...  \n225  Strisce--161-_jpg.rf.4cdcd4f6acd4bd15aba604fac...  \n226  Strisce--187-_jpg.rf.578db8c53f28e0e7f38a7c34d...  \n227  Strisce--107-_jpg.rf.17c8ef02eb84b49a728055218...  \n228  Strisce--236-_jpg.rf.9985c79d60f2cdf77d98acea8...  \n\n[229 rows x 2 columns]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Cargar los datos","metadata":{}},{"cell_type":"code","source":"\nimages = os.listdir(path_images)\nlabels = os.listdir(path_labels)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:54:02.765976Z","iopub.execute_input":"2024-06-30T03:54:02.766646Z","iopub.status.idle":"2024-06-30T03:54:02.773157Z","shell.execute_reply.started":"2024-06-30T03:54:02.766619Z","shell.execute_reply":"2024-06-30T03:54:02.771919Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"print(f'Cant imag: {len(images)}')\nprint(f'Cant labels: {len(labels)}')","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:54:02.774383Z","iopub.execute_input":"2024-06-30T03:54:02.774703Z","iopub.status.idle":"2024-06-30T03:54:02.780083Z","shell.execute_reply.started":"2024-06-30T03:54:02.774679Z","shell.execute_reply":"2024-06-30T03:54:02.779031Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"Cant imag: 1294\nCant labels: 1294\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Asegurarse de que las imágenes y las etiquetas coinciden","metadata":{}},{"cell_type":"code","source":"val_data=test_data","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:54:58.096796Z","iopub.execute_input":"2024-06-30T03:54:58.097165Z","iopub.status.idle":"2024-06-30T03:54:58.101647Z","shell.execute_reply.started":"2024-06-30T03:54:58.097125Z","shell.execute_reply":"2024-06-30T03:54:58.100487Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"val_data['image'].head()","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:54:55.453836Z","iopub.execute_input":"2024-06-30T03:54:55.454222Z","iopub.status.idle":"2024-06-30T03:54:55.462065Z","shell.execute_reply.started":"2024-06-30T03:54:55.454190Z","shell.execute_reply":"2024-06-30T03:54:55.460978Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"351    Strisce--345-_jpg.rf.da097ba500b51d443044e2bb1...\n486    Strisce--327-_jpg.rf.2ae29732967279d4cb05ca8eb...\n599    Strisce--280-_jpg.rf.c0115cdde0b883889340bf3ae...\n442    Strisce--335-_jpg.rf.b2ae066a13a8fa67658119789...\n270    Strisce--299-_jpg.rf.c92dc770b01f3ca86352e24c8...\nName: image, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"import os\nimport shutil\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom ultralytics import YOLO\nfrom ultralytics.utils import metrics\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, roc_auc_score\nimport matplotlib.pyplot as plt\n\n# Configurar el modelo YOLOv8\nmodel = YOLO('yolov8n.pt')  # Puedes cambiar el modelo base según tus necesidades","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:00.325038Z","iopub.execute_input":"2024-06-30T03:55:00.325960Z","iopub.status.idle":"2024-06-30T03:55:00.382249Z","shell.execute_reply.started":"2024-06-30T03:55:00.325927Z","shell.execute_reply":"2024-06-30T03:55:00.381398Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":"# Crear Carpeta para guardar los resultados de la validación","metadata":{}},{"cell_type":"code","source":"os.makedirs('/kaggle/working/validation_results', exist_ok=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:02.453635Z","iopub.execute_input":"2024-06-30T03:55:02.454014Z","iopub.status.idle":"2024-06-30T03:55:02.459261Z","shell.execute_reply.started":"2024-06-30T03:55:02.453984Z","shell.execute_reply":"2024-06-30T03:55:02.458057Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"\n# Función para evaluar el modelo\ndef evaluate_model(model,experiment_name:str):\n    yaml_content = \"\"\"\n                   \n\n                    train: /kaggle/working/\n                    val: /kaggle/working/test_folder/test_images\n\n\n                    nc: 1\n\n                    names:\n                         - crosswalk\n                    \"\"\"\n\n    # Guardar el archivo\n    with open('/kaggle/working/crosswalk_test.yaml', 'w') as file:\n        file.write(yaml_content)\n\n    print(\"Archivo .yaml creado con éxito.\")\n    \n   \n    predictions= model.val(data='/kaggle/working/crosswalk_test.yaml',project=f'/kaggle/working/validation_results', name=f'experiment{experiment_name}',save_json=True)\n    ","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:02.912715Z","iopub.execute_input":"2024-06-30T03:55:02.913354Z","iopub.status.idle":"2024-06-30T03:55:02.919080Z","shell.execute_reply.started":"2024-06-30T03:55:02.913323Z","shell.execute_reply":"2024-06-30T03:55:02.918116Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"\n# Directorio para guardar las métricas\nmetrics_dir = '/kaggle/working/metrics'\nos.makedirs(metrics_dir, exist_ok=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:03.772626Z","iopub.execute_input":"2024-06-30T03:55:03.773218Z","iopub.status.idle":"2024-06-30T03:55:03.777767Z","shell.execute_reply.started":"2024-06-30T03:55:03.773188Z","shell.execute_reply":"2024-06-30T03:55:03.776723Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"\n# Parámetros para la condición de parada\nn_experiments = 10\nmax_epochs = 300  # Número máximo de epochs para el entrenamiento\npatience = 10  # Número de epochs a esperar si no hay mejora en la precisión","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:04.341536Z","iopub.execute_input":"2024-06-30T03:55:04.342179Z","iopub.status.idle":"2024-06-30T03:55:04.346618Z","shell.execute_reply.started":"2024-06-30T03:55:04.342128Z","shell.execute_reply":"2024-06-30T03:55:04.345660Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":"## Crear Carpeta para guardar los modelos finales","metadata":{}},{"cell_type":"code","source":"save_weights_dir='/kaggle/working/save_weights'\nos.makedirs('/kaggle/working/save_weights', exist_ok=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:05.998829Z","iopub.execute_input":"2024-06-30T03:55:05.999703Z","iopub.status.idle":"2024-06-30T03:55:06.003775Z","shell.execute_reply.started":"2024-06-30T03:55:05.999667Z","shell.execute_reply":"2024-06-30T03:55:06.002948Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"\n\n    \nall_experiment_metrics = []\n\n\nfor experiment in range(n_experiments):\n    \n    try:\n     # Inicializa un nuevo run\n        wandb.init(\n            project=\"CrossWalks_Detection\",\n            group=\"TT\",\n            job_type=\"Train\",\n            name=f\"Experimento_{experiment}\",\n            reinit=True\n        )\n    except:\n        print(\"Fallo subir los salves\")\n    \n    print(f\"Experimento {experiment + 1}\")\n    \n    # Dividir los datos en train y validation\n    train_data, val_data = train_test_split(data, test_size=0.2, random_state=42)\n    \n    # Crear directorio para el experimento \n    experiment_dir=os.path.join('/kaggle/working',f'experiment_{experiment+1}')\n    os.makedirs(experiment_dir,exist_ok=True)\n    \n    # Crear directorios para train y validation\n    train_dir = os.path.join(experiment_dir, f'train_data_{experiment + 1}')\n    val_dir = os.path.join(experiment_dir, f'val_data_{experiment + 1}')\n    os.makedirs(train_dir, exist_ok=True)\n    os.makedirs(val_dir, exist_ok=True)\n    \n    # Crear directorios para imágenes y etiquetas dentro de train y validation\n    train_images_dir = os.path.join(train_dir, 'images')\n    train_labels_dir = os.path.join(train_dir, 'labels')\n    val_images_dir = os.path.join(val_dir, 'images')\n    val_labels_dir = os.path.join(val_dir, 'labels')\n    os.makedirs(train_images_dir, exist_ok=True)\n    os.makedirs(train_labels_dir, exist_ok=True)\n    os.makedirs(val_images_dir, exist_ok=True)\n    os.makedirs(val_labels_dir, exist_ok=True)\n    print(f'Copiando a las carpetas de entrenamiento')\n    # Copiar las imágenes y etiquetas a los directorios correspondientes\n    for index in train_data.index:\n        shutil.copy(os.path.join(path_images, train_data.loc[index, 'image']), os.path.join(train_images_dir, train_data.loc[index, 'image']))\n        shutil.copy(os.path.join(path_labels, train_data.loc[index, 'label']), os.path.join(train_labels_dir, train_data.loc[index, 'label']))\n    for index in val_data.index:\n        shutil.copy(os.path.join(path_images, val_data.loc[index, 'image']), os.path.join(val_images_dir, val_data.loc[index, 'image']))\n        shutil.copy(os.path.join(path_labels, val_data.loc[index, 'label']), os.path.join(val_labels_dir, val_data.loc[index, 'label']))\n    print(\"Copiado\")\n    # Crear el archivo YAML\n    yaml_path = os.path.join('/kaggle/working', f'data_{experiment + 1}.yaml')\n    yaml_content = f\"\"\"\n                    names:\n                        0: crosswalk\n                    train: {train_dir}/images\n                    val: {val_dir}/images\n                    \"\"\"\n    # Guardar el archivo\n    with open(yaml_path, 'w') as file:\n        file.write(yaml_content)\n    print(\"Archivo .yaml creado con éxito.\")\n    \n    experiment_result_path=f'/kaggle/working/experiment_{experiment+1}/training_results'\n    \n    os.makedirs(experiment_result_path, exist_ok=True)\n    \n    model.train(data=yaml_path,\n                    epochs=max_epochs, # Número máximo de epochs para el entrenamiento\n                    imgsz=512,\n                    cache=True,\n                    patience=patience,\n                    batch=32,\n                    save_period=10,\n                    seed=123,\n                    time=2,\n                    save=True,\n                    plots=True,\n                    #project=f'proyect_experiment{1}',\n                    device=[0, 1],\n                    # Esto especifica el uso de las GPUs 0 y 1\n                        )  # Ajustar epochs e imgsz según tus necesidades\n    evaluate_model(model,f'experiment_{experiment}')\n    \n    # Export the model\n    model.export(format=\"onnx\")\n    model.save(f'{save_weights_dir}/experiment{experiment}')\n        \nwandb.finish()\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:57.106665Z","iopub.execute_input":"2024-06-30T03:55:57.107327Z","iopub.status.idle":"2024-06-30T03:56:12.964552Z","shell.execute_reply.started":"2024-06-30T03:55:57.107295Z","shell.execute_reply":"2024-06-30T03:56:12.963122Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"Fallo subir los salves\nExperimento 1\nCopiando a las carpetas de entrenamiento\nCopiado\nArchivo .yaml creado con éxito.\nUltralytics YOLOv8.2.48 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15102MiB)\n                                                      CUDA:1 (Tesla T4, 15102MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_1.yaml, epochs=300, time=2, patience=10, batch=32, imgsz=512, save=True, save_period=10, cache=True, device=[0, 1], workers=8, project=None, name=train, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=runs/detect/train\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \nModel summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n\nTransferred 355/355 items from pretrained weights\n\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python3.10 -m torch.distributed.run --nproc_per_node 2 --master_port 44359 /root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py\nUltralytics YOLOv8.2.48 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15102MiB)\n                                                      CUDA:1 (Tesla T4, 15102MiB)\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir runs/detect/train', view at http://localhost:6006/\n","output_type":"stream"},{"name":"stderr","text":"wandb: ERROR api_key not configured (no-tty). call wandb.login(key=[your_api_key])\nTraceback (most recent call last):\n  File \"/root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py\", line 13, in <module>\n    results = trainer.train()\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 204, in train\n    self._do_train(world_size)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 323, in _do_train\n    self._setup_train(world_size)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 231, in _setup_train\n    self.run_callbacks(\"on_pretrain_routine_start\")\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 167, in run_callbacks\n    callback(self)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/utils/callbacks/wb.py\", line 112, in on_pretrain_routine_start\n    wb.run or wb.init(project=trainer.args.project or \"YOLOv8\", name=trainer.args.name, config=vars(trainer.args))\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 1178, in init\n    wandb._sentry.reraise(e)\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/analytics/sentry.py\", line 155, in reraise\n    raise exc.with_traceback(sys.exc_info()[2])\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 1163, in init\n    wi.setup(kwargs)\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 300, in setup\n    wandb_login._login(\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_login.py\", line 334, in _login\n    wlogin.prompt_api_key()\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_login.py\", line 263, in prompt_api_key\n    raise UsageError(\"api_key not configured (no-tty). call \" + directive)\nwandb.errors.UsageError: api_key not configured (no-tty). call wandb.login(key=[your_api_key])\nTraceback (most recent call last):\n  File \"/root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py\", line 13, in <module>\n    results = trainer.train()\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 204, in train\n    self._do_train(world_size)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 323, in _do_train\n    self._setup_train(world_size)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 231, in _setup_train\n    self.run_callbacks(\"on_pretrain_routine_start\")\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py\", line 167, in run_callbacks\n    callback(self)\n  File \"/opt/conda/lib/python3.10/site-packages/ultralytics/utils/callbacks/wb.py\", line 112, in on_pretrain_routine_start\n    wb.run or wb.init(project=trainer.args.project or \"YOLOv8\", name=trainer.args.name, config=vars(trainer.args))\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 1178, in init\n    wandb._sentry.reraise(e)\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/analytics/sentry.py\", line 155, in reraise\n    raise exc.with_traceback(sys.exc_info()[2])\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 1163, in init\n    wi.setup(kwargs)\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_init.py\", line 300, in setup\n    wandb_login._login(\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_login.py\", line 334, in _login\n    wlogin.prompt_api_key()\n  File \"/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_login.py\", line 263, in prompt_api_key\n    raise UsageError(\"api_key not configured (no-tty). call \" + directive)\nwandb.errors.UsageError: api_key not configured (no-tty). call wandb.login(key=[your_api_key])\n[2024-06-30 03:56:12,462] torch.distributed.elastic.multiprocessing.api: [WARNING] Sending process 187 closing signal SIGTERM\n[2024-06-30 03:56:12,526] torch.distributed.elastic.multiprocessing.api: [ERROR] failed (exitcode: 1) local_rank: 0 (pid: 186) of binary: /opt/conda/bin/python3.10\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n    return _run_code(code, main_globals, None,\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 86, in _run_code\n    exec(code, run_globals)\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/run.py\", line 810, in <module>\n    main()\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py\", line 346, in wrapper\n    return f(*args, **kwargs)\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/run.py\", line 806, in main\n    run(args)\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/run.py\", line 797, in run\n    elastic_launch(\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/launcher/api.py\", line 134, in __call__\n    return launch_agent(self._config, self._entrypoint, list(args))\n  File \"/opt/conda/lib/python3.10/site-packages/torch/distributed/launcher/api.py\", line 264, in launch_agent\n    raise ChildFailedError(\ntorch.distributed.elastic.multiprocessing.errors.ChildFailedError: \n============================================================\n/root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py FAILED\n------------------------------------------------------------\nFailures:\n  <NO_OTHER_FAILURES>\n------------------------------------------------------------\nRoot Cause (first observed failure):\n[0]:\n  time      : 2024-06-30_03:56:12\n  host      : e043033a835a\n  rank      : 0 (local_rank: 0)\n  exitcode  : 1 (pid: 186)\n  error_file: <N/A>\n  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html\n============================================================\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mCalledProcessError\u001b[0m                        Traceback (most recent call last)","Cell \u001b[0;32mIn[27], line 68\u001b[0m\n\u001b[1;32m     64\u001b[0m experiment_result_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/kaggle/working/experiment_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mexperiment\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m1\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m/training_results\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m     66\u001b[0m os\u001b[38;5;241m.\u001b[39mmakedirs(experiment_result_path, exist_ok\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[0;32m---> 68\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43myaml_path\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     69\u001b[0m \u001b[43m                \u001b[49m\u001b[43mepochs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmax_epochs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;66;43;03m# Número máximo de epochs para el entrenamiento\u001b[39;49;00m\n\u001b[1;32m     70\u001b[0m \u001b[43m                \u001b[49m\u001b[43mimgsz\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m512\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     71\u001b[0m \u001b[43m                \u001b[49m\u001b[43mcache\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m     72\u001b[0m \u001b[43m                \u001b[49m\u001b[43mpatience\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpatience\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     73\u001b[0m \u001b[43m                \u001b[49m\u001b[43mbatch\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m32\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     74\u001b[0m \u001b[43m                \u001b[49m\u001b[43msave_period\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m10\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     75\u001b[0m \u001b[43m                \u001b[49m\u001b[43mseed\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m123\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     76\u001b[0m \u001b[43m                \u001b[49m\u001b[43mtime\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m2\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     77\u001b[0m \u001b[43m                \u001b[49m\u001b[43msave\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m     78\u001b[0m \u001b[43m                \u001b[49m\u001b[43mplots\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m     79\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;66;43;03m#project=f'proyect_experiment{1}',\u001b[39;49;00m\n\u001b[1;32m     80\u001b[0m \u001b[43m                \u001b[49m\u001b[43mdevice\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m[\u001b[49m\u001b[38;5;241;43m0\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     81\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;66;43;03m# Esto especifica el uso de las GPUs 0 y 1\u001b[39;49;00m\n\u001b[1;32m     82\u001b[0m \u001b[43m                    \u001b[49m\u001b[43m)\u001b[49m  \u001b[38;5;66;03m# Ajustar epochs e imgsz según tus necesidades\u001b[39;00m\n\u001b[1;32m     83\u001b[0m evaluate_model(model,\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mexperiment_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mexperiment\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     85\u001b[0m \u001b[38;5;66;03m# Export the model\u001b[39;00m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ultralytics/engine/model.py:650\u001b[0m, in \u001b[0;36mModel.train\u001b[0;34m(self, trainer, **kwargs)\u001b[0m\n\u001b[1;32m    647\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmodel \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrainer\u001b[38;5;241m.\u001b[39mmodel\n\u001b[1;32m    649\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrainer\u001b[38;5;241m.\u001b[39mhub_session \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msession  \u001b[38;5;66;03m# attach optional HUB session\u001b[39;00m\n\u001b[0;32m--> 650\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrainer\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    651\u001b[0m \u001b[38;5;66;03m# Update model and cfg after training\u001b[39;00m\n\u001b[1;32m    652\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m RANK \u001b[38;5;129;01min\u001b[39;00m {\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m0\u001b[39m}:\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py:199\u001b[0m, in \u001b[0;36mBaseTrainer.train\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    197\u001b[0m     subprocess\u001b[38;5;241m.\u001b[39mrun(cmd, check\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m    198\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m--> 199\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m e\n\u001b[1;32m    200\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[1;32m    201\u001b[0m     ddp_cleanup(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;28mstr\u001b[39m(file))\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ultralytics/engine/trainer.py:197\u001b[0m, in \u001b[0;36mBaseTrainer.train\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    195\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m    196\u001b[0m     LOGGER\u001b[38;5;241m.\u001b[39minfo(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mcolorstr(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mDDP:\u001b[39m\u001b[38;5;124m\"\u001b[39m)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m debug command \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mjoin(cmd)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m--> 197\u001b[0m     \u001b[43msubprocess\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcmd\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcheck\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m    198\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    199\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m e\n","File \u001b[0;32m/opt/conda/lib/python3.10/subprocess.py:526\u001b[0m, in \u001b[0;36mrun\u001b[0;34m(input, capture_output, timeout, check, *popenargs, **kwargs)\u001b[0m\n\u001b[1;32m    524\u001b[0m     retcode \u001b[38;5;241m=\u001b[39m process\u001b[38;5;241m.\u001b[39mpoll()\n\u001b[1;32m    525\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m check \u001b[38;5;129;01mand\u001b[39;00m retcode:\n\u001b[0;32m--> 526\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m CalledProcessError(retcode, process\u001b[38;5;241m.\u001b[39margs,\n\u001b[1;32m    527\u001b[0m                                  output\u001b[38;5;241m=\u001b[39mstdout, stderr\u001b[38;5;241m=\u001b[39mstderr)\n\u001b[1;32m    528\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m CompletedProcess(process\u001b[38;5;241m.\u001b[39margs, retcode, stdout, stderr)\n","\u001b[0;31mCalledProcessError\u001b[0m: Command '['/opt/conda/bin/python3.10', '-m', 'torch.distributed.run', '--nproc_per_node', '2', '--master_port', '44359', '/root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py']' returned non-zero exit status 1."],"ename":"CalledProcessError","evalue":"Command '['/opt/conda/bin/python3.10', '-m', 'torch.distributed.run', '--nproc_per_node', '2', '--master_port', '44359', '/root/.config/Ultralytics/DDP/_temp_95pbr_zr139538353454672.py']' returned non-zero exit status 1.","output_type":"error"}]},{"cell_type":"code","source":"import os\nimport zipfile\n\ndef comprimir_carpeta(carpeta_origen, archivo_destino):\n    try:\n        # Asegurarse de que la carpeta de origen existe\n        if not os.path.exists(carpeta_origen):\n            raise FileNotFoundError(f\"La carpeta de origen '{carpeta_origen}' no existe.\")\n\n        # Crear el archivo ZIP\n        with zipfile.ZipFile(archivo_destino, 'w', zipfile.ZIP_DEFLATED) as zipf:\n            # Recorrer el directorio y agregar archivos al ZIP\n            for raiz, dirs, archivos in os.walk(carpeta_origen):\n                for archivo in archivos:\n                    ruta_completa = os.path.join(raiz, archivo)\n                    ruta_relativa = os.path.relpath(ruta_completa, carpeta_origen)\n                    zipf.write(ruta_completa, ruta_relativa)\n\n        print(f\"Compresión completada. Archivo ZIP creado en: {archivo_destino}\")\n    except Exception as e:\n        print(f\"Error durante la compresión: {str(e)}\")\n\n# Ejemplo de uso\ncarpeta_origen = \"/kaggle/working/\"\narchivo_destino = \"/kaggle/working/save.zip\"\n\ncomprimir_carpeta(carpeta_origen, archivo_destino)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T03:55:27.420268Z","iopub.status.idle":"2024-06-30T03:55:27.420739Z","shell.execute_reply.started":"2024-06-30T03:55:27.420493Z","shell.execute_reply":"2024-06-30T03:55:27.420513Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}